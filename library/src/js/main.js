console.log('Вёрстка валидная +10\nВёрстка семантическая +16\nВ коде страницы присутствуют следующие элементы (указано минимальное количество, может быть больше):\n<header>, <main>, <footer> +2.\nшесть элементов <section> (по количеству секций) +2.\nтолько один заголовок <h1> +2. Если элементов <h1> на странице больше одного, считаем это ошибкой.\nпять заголовков <h2> (легко отличимы на верхних границах секций, имеют единый стиль) +2.\nодин элемент <nav> (панель навигации в хедере) +2.\nдва списка ul > li > a (панель навигации, ссылки на соцсети в футере) +2.\nсемь кнопок <button> +2.\nдва инпута <input> +2.\nВёрстка соответствует макету +5\nблок <header> +8:\nСтараемся, чтобы текст совпадал с макетом. Если есть небольшие отклонения, то главное для нас, чтобы расстояние между элементами меню было одинаковое, 30px.\nЭлементы меню работают как якоря.\nСами элементы меню при наведении (эффект hover) должны быть интерактивными\nРасстояние от самого меню до иконки пользователя - 40px. Иконка является отдльным элементом, и не входит в nav>\nТекст "Brooklyn Public Library" находится в <h1>.\nсекция Welcome +4.\nсекция About +6:\nРасстояния между кнопками пагинации 10px.\nОбратите внимание, что кнопки хоть и имеют вид круга, но интерактивная область (область нажатия, выделяемая cursor:pointer) должна быть размером +5px в каждую сторону (круглая, квадратная или со скошенными углами - на ваш выбор). Т.е. это будут прозрачные элементы размерами 26x26, внутри которых будут располагаться непосредственно кнопки 16x16.\nсекция Favorites +8:\nИнтерактивные кнопки дожны иметь структуру input type="radio" + label.\nДобавьбте небольшую область вокруг кнопки и надписи (например, 5px как в примере секции about) для того, чтобы была возможность легче наводить мышку.\nКнопки "buy" должны быть интерактивными, плавно менять свой цвет при наведении на них, как указано в макете styleguides.\nКнопка "own" не должна быть интерактивной, не должна нажиматься. И на ней должен присутствовать атрибут disabled.\nсекция CoffeShop +6.\nсекция Contacts +6:\nКарту можно вставить просто картинкой. Добавлять ее отдельным сервисом не обязательно.\nВезде, где в тексте встречаются цифры в виде телефонного номера, это должны быть ссылки с типом "tel" и номером.\nТам, где в тексте встречается текст с именем контактного лица, это должна быть ссылка с типом mailto и адресом почты (например, AmandaHirst@gmail.com).\nсекция LibraryCard +8:\nFind your Library card - это должа быть форма с полями input.')
console.log('Все 3 кнопки должны быть интерактивными, плавно менять свой цвет при наведении на них\nблок < footer > +8:\nАдрес библиотеки должен быть ссылкой(место на карте, например).\nИконки соцсетей также должны быть ссылками(можете вставить свои соцсети или любые другие аккаунты этих сервисов).\nВместо Username должно быть ваше имя, как оно пишется на английском языке и ссылка на GitHub.\nОбщие требования к верстке + 20\nдля построения сетки используются флексы или гриды(display: flex...или display: grid...) + 2.\nпри уменьшении масштаба страницы браузера вся вёрстка(контент и фоны) размещается по центру, а не сдвигается в сторону + 2. Для этого должна быть обертка вокруш всей страницы, которая выравнивается по центру.Фон за рамками страницы может быть черным, белым или любого оттенка серого.\nиконки добавлены в формате.svg.SVG может быть добавлен любым способом.Обращаем внимание на формат, а не на способ добавления + 2.\nизображения добавлены в формате.jpg(.jpeg) или.png + 2.\nесть favicon + 2. В макете иконки нет, поэтому можно сгенерировать самому с помощью сервиса favicon - generator.Иконка должна содержать 3 буквы "BPL"(Brooklyn Public Library)\nплавная прокрутка по якорям + 2.\nв футере название ссылки Username заменено и ведет на GitHub студента + 2.\nв футере ссылка The Rolling Scopes School ведет на страницу курса https://rs.school/js-stage0/ +2.\nинтерактивность элементов согласно макету.Интерактивность включает в себя не только изменение внешнего вида курсора, например, при помощи свойства cursor: pointer, но и другие визуальные эффекты, например, изменение цвета фона или цвета шрифта.Если в макете указаны стили при наведении и клике, для элемента указываем эти стили.Если в макете стили не указаны, реализуете их по своему усмотрению, руководствуясь общим стилем макета + 2.\nобязательное требование к интерактивности: плавное изменение внешнего вида элемента при наведении и клике не влияет на соседние элементы + 2.')

const burger = document.querySelector('.burger')
const nav = document.querySelector('.nav')
const overlay = document.querySelector('.overlay')
const burgerClose = document.querySelector('.burger__close')
const itemLink = document.querySelectorAll('.item__link')

function burgerActive() {
  burger.addEventListener('click', () => {
    nav.classList.toggle('nav__active')
    overlay.classList.toggle('overlay__active')
    burger.classList.toggle('burger__close.active')
  })
}

burgerActive()

function burgerMenuClose() {
  overlay.classList.remove('overlay__active')
  nav.classList.remove('nav__active')
  burger.classList.remove('burger__close.active')
}

overlay.addEventListener('click', burgerMenuClose)
burgerClose.addEventListener('click', burgerMenuClose)
itemLink.forEach(item => {
  item.addEventListener('click', burgerMenuClose)
})

const profile = document.querySelector('.profile__logo')
const profileModal = document.querySelector('.profile__modal')

function profileActive() {
  profile.addEventListener('click', () => {
    profile.classList.add('.profile__modal.active')
  })
}

profileActive()